{"version":3,"file":"commonHelpers2.js","sources":["../src/js/01-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst button = document.querySelector('.button');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\nlet countdownInterval;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    let userSelectedDate = selectedDates[0];\n    console.log(userSelectedDate);\n    if (userSelectedDate < new Date()) {\n      window.alert('Please choose a date in the future');\n      button.disabled = true;\n    } else {\n      button.disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateCountdown(targetDate) {\n  const now = new Date().getTime();\n  const difference = targetDate.getTime() - now;\n\n  const { days, hours, minutes, seconds } = convertMs(difference);\n\n  daysElement.textContent = formatTime(days);\n  hoursElement.textContent = formatTime(hours);\n  minutesElement.textContent = formatTime(minutes);\n  secondsElement.textContent = formatTime(seconds);\n}\n\nbutton.addEventListener('click', () => {\n  const datetimePicker = flatpickr('#datetime-picker');\n  const selectedDate = datetimePicker.selectedDates[0];\n\n  updateCountdown(selectedDate);\n\n  countdownInterval = setInterval(() => {\n    updateCountdown(selectedDate);\n  }, 1000);\n\n  button.disabled = true;\n});\n\nfunction formatTime(time) {\n  return time < 10 ? `0${time}` : time;\n}\n"],"names":["button","daysElement","hoursElement","minutesElement","secondsElement","options","selectedDates","userSelectedDate","flatpickr","convertMs","ms","days","hours","minutes","seconds","updateCountdown","targetDate","now","difference","formatTime","selectedDate","time"],"mappings":"oGAGA,MAAMA,EAAS,SAAS,cAAc,SAAS,EACzCC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAGxDC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,IAAIC,EAAmBD,EAAc,CAAC,EACtC,QAAQ,IAAIC,CAAgB,EACxBA,EAAmB,IAAI,MACzB,OAAO,MAAM,oCAAoC,EACjDP,EAAO,SAAW,IAElBA,EAAO,SAAW,EAErB,CACH,EAEAQ,EAAU,mBAAoBH,CAAO,EAErC,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAgBC,EAAY,CACnC,MAAMC,EAAM,IAAI,KAAM,EAAC,QAAO,EACxBC,EAAaF,EAAW,QAAO,EAAKC,EAEpC,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUS,CAAU,EAE9DjB,EAAY,YAAckB,EAAWR,CAAI,EACzCT,EAAa,YAAciB,EAAWP,CAAK,EAC3CT,EAAe,YAAcgB,EAAWN,CAAO,EAC/CT,EAAe,YAAce,EAAWL,CAAO,CACjD,CAEAd,EAAO,iBAAiB,QAAS,IAAM,CAErC,MAAMoB,EADiBZ,EAAU,kBAAkB,EACf,cAAc,CAAC,EAEnDO,EAAgBK,CAAY,EAER,YAAY,IAAM,CACpCL,EAAgBK,CAAY,CAC7B,EAAE,GAAI,EAEPpB,EAAO,SAAW,EACpB,CAAC,EAED,SAASmB,EAAWE,EAAM,CACxB,OAAOA,EAAO,GAAK,IAAIA,CAAI,GAAKA,CAClC"}